import sys 
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .field import Field

if sys.version_info >= (3, 12):
    from typing import dataclass_transform
else:
    from typing_extensions import dataclass_transform


@dataclass_transform(field_specifiers=(Field,))
class HeapStruct(_HeapStruct):
    pass
    # __pyx_vtable__: _ClassVar[PyCapsule] = ...
    # def __init__(self, *args, **kwargs) -> None: ...
    # def __reduce__(self): ...

class HeapStructMixin:
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __reduce__(self): ...
    def __reduce_cython__(self, *args, **kwargs): ...
    def __setstate_cython__(self, *args, **kwargs): ...

class InternalInfo:
    # __pyx_vtable__: _ClassVar[PyCapsule] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __reduce__(self): ...

class _HeapStruct:
    # __pyx_vtable__: _ClassVar[PyCapsule] = ...
    # s_defaults: Incomplete
    # s_fields: Incomplete
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __reduce__(self): ...
